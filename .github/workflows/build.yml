name: build

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    paths:
      - "go.*"
      - "**/*.go"
      - ".github/workflows/*.yml"
    branches:
      - "main"

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: false  # avoid cache-poisoning attacks

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  validate-workfows:
    name: Validate GitHub Workflows
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Check Workflows
        run: |
          python -m pip install zizmor --root-user-action=ignore
          zizmor .github/workflows/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Create and Publish Release
    runs-on: ubuntu-latest

    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: false  # avoid cache-poisoning attacks

      - name: Install go tools
        run: go mod tidy -modfile tool.mod

      # We deliberately avoid using the official goreleaser action here,
      # because we added goreleaser with go -tool get, which stores the precise
      # goreleaser version and enables us to use the exact same one locally.
      - name: Create release with goreleaser
        run: go tool -modfile tool.mod goreleaser release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container image with fleeting-artifact
        run: |
          echo "$QUAY_IO_TOKEN" | go tool -modfile tool.mod \
            fleeting-artifact login \
            -username cloudscalech+fleeting \
            -password-stdin \
            quay.io
          go tool -modfile tool.mod fleeting-artifact release \
            "quay.io/cloudscalech/fleeting-plugin-cloudscale:$GITHUB_REF_NAME"
        env:
          QUAY_IO_TOKEN: ${{ secrets.QUAY_IO_TOKEN}}
